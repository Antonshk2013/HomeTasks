
"""
1. Напишите программу, которая запрашивает у пользователя строку и преобразует ее, удаляя все гласные буквы из строки.
Используйте метод replace() для замены гласных букв на пустую строку.
Выведите преобразованную строку на экран с помощью команды print.
Пример вывода:
Введите строку: Hello, world!
Результат: Hll, wrld!
"""

def delete_vowels(words):
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']
    for i in vowels:
        words = words.replace(i, "")
    return words

"""
2. Напишите программу, которая запрашивает у пользователя строку и определяет, содержит ли она только уникальные 
символы. Если все символы в строке уникальны, выведите соответствующее сообщение на экран. В противном случае 
выведите сообщение о том, какие символы повторяются. Не используйте множества и подобные структуры данных, которые 
мы пока не изучали, для проверки уникальности символов.
Пример вывода:
Введите строку: Python
Все символы в строке уникальны.
Введите строку: Hello
Символы 'l' и 'o' повторяются.
"""

def not_unique(words: str)-> str:
    unic_list = []
    ununic_list = []
    for i in words:
        if i in unic_list:
            ununic_list.append(i)
        else: unic_list.append(i)

    return f"Символы {' и '.join(ununic_list)} повторяются."


"""
3. Напишите программу, которая запрашивает у пользователя строку и выравнивает ее по центру с заданной шириной. 
Если строка не может быть выровнена по центру из-за нечетной ширины, она должна быть выровнена смещением вправо. 
Используйте методы center() и rjust() для выравнивания строки.
Пример вывода:
Введите строку: Python
Введите ширину: 10
Результат:
Python
"""

def center(word: str, width:int)-> str:
    if width % 2 == 0 and len(word) % 2 == 0 or width % 2 == 1 and len(word) % 2 == 1:
        return word.center(width)
    else:
        return word.rjust(width)



if __name__ == '__main__':
    print(delete_vowels("Hello, world!"))
    print(not_unique("Helloo"))
    print(center("Python", 10))
